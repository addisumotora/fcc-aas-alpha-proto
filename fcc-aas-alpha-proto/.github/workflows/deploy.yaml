name: Deploy
run-name: Deploy to ${{ inputs.stack_name }}

on:
  workflow_dispatch:
    inputs:
      region:
        default: us-east-1
        type: string
      stack_name:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
  workflow_call:
    inputs:
      region:
        default: us-east-1
        type: string
      stack_name:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  deploy-stack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: aws-actions/setup-sam@v2
        with:
          version: 1.70.0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.region }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public
      - name: Install Dependencies
        run: npm ci
      - name: SAM Build
        run: npm run build:sam -- -l
      - name: SAM Deploy
        env:
          REGION: ${{ inputs.region }}
          STACK_NAME: ${{ inputs.stack_name }}
        run: npm run deploy:sam -- -l --region "$REGION" --stack-name "$STACK_NAME"

  deploy-app:
    runs-on: ubuntu-latest
    needs: deploy-stack
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.region }}
      - name: Install Dependencies
        run: npm ci
      - name: Build App
        run: npm run build:app -- -l
      - name: Deploy App
        env:
          REGION: ${{ inputs.region }}
          STACK_NAME: ${{ inputs.stack_name }}
        run: npm run deploy:app -- --region "$REGION" --stack-name "$STACK_NAME"
      - name: Environment Information
        id: environment
        env:
          STACK_NAME: ${{ inputs.stack_name }}
        run: |
          # Set summary
          echo "### Deployment complete! :rocket: Environment information below:" >> $GITHUB_STEP_SUMMARY
          export WEB_URL=$(aws cloudformation describe-stacks --stack-name "$STACK_NAME" --query "Stacks[0].Outputs[?OutputKey=='WebEndpoint'].OutputValue" --output text)
          echo "- Web Url: ${WEB_URL}" >> $GITHUB_STEP_SUMMARY
